Total API Endpoints: 147

============================================================
ENDPOINT 1
Method: GET
Path: /metrics
Category/Tags: No category
Summary: Metrics
Description: Endpoint that serves Prometheus metrics.
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 2
Method: POST
Path: /api/v1/registrations/attendance/{event_id}/mark
Category/Tags: api-v1, event-registrations-api, registrations
Summary: Mark Attendance
Description: Mark attendance for current student
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Request Body:
  MIME Type: application/json
  Schema: {
    "type": "object",
    "additionalProperties": true,
    "title": "Attendance Data"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 3
Method: GET
Path: /api/v1/registrations/event/{event_id}/registrations
Category/Tags: api-v1, event-registrations-api, registrations
Summary: Get Event Registrations
Description: Get all registrations for an event (admin only)
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 4
Method: GET
Path: /api/v1/registrations/event/{event_id}/recent
Category/Tags: api-v1, event-registrations-api, registrations
Summary: Get Recent Registrations
Description: Get recent registrations for an event (public endpoint for EventDetail.jsx)
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
  - Name: limit
    In: query
    Required: False
    Type: integer
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 5
Method: POST
Path: /api/v1/storage/upload/event-files
Category/Tags: Storage
Summary: Upload Event Files
Description: Upload event-related files (posters, certificates) to campusconnect-event-data bucket
Request Body:
  MIME Type: multipart/form-data
  Schema: {
    "$ref": "#/components/schemas/Body_upload_event_files_api_v1_storage_upload_event_files_post"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 6
Method: POST
Path: /api/v1/storage/upload/avatar
Category/Tags: Storage
Summary: Upload Avatar
Description: Upload user avatar to campusconnect bucket
Request Body:
  MIME Type: multipart/form-data
  Schema: {
    "$ref": "#/components/schemas/Body_upload_avatar_api_v1_storage_upload_avatar_post"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 7
Method: POST
Path: /api/v1/storage/upload/certificate-template
Category/Tags: Storage
Summary: Upload Certificate Template
Description: Upload certificate template to campusconnect bucket
Request Body:
  MIME Type: multipart/form-data
  Schema: {
    "$ref": "#/components/schemas/Body_upload_certificate_template_api_v1_storage_upload_certificate_template_post"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 8
Method: POST
Path: /api/v1/storage/upload/asset
Category/Tags: Storage
Summary: Upload Asset
Description: Upload college assets (logos, signatures) to campusconnect-assets-private bucket
Request Body:
  MIME Type: multipart/form-data
  Schema: {
    "$ref": "#/components/schemas/Body_upload_asset_api_v1_storage_upload_asset_post"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 9
Method: DELETE
Path: /api/v1/storage/delete/event-files/{event_id}
Category/Tags: Storage
Summary: Delete Event Files
Description: Delete all files for an event from campusconnect-event-data bucket
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 10
Method: DELETE
Path: /api/v1/storage/delete/event-specific-files/{event_id}
Category/Tags: Storage
Summary: Delete Specific Event Files
Description: Delete specific file types for an event from campusconnect-event-data bucket
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
  - Name: file_types
    In: query
    Required: True
    Type: string
    Description: Comma-separated list of file types to delete (e.g., 'event_poster,Certificate of Participation')
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 11
Method: DELETE
Path: /api/v1/storage/delete/avatar
Category/Tags: Storage
Summary: Delete Avatar Endpoint
Description: Delete user avatar from campusconnect bucket
Request Body:
  MIME Type: application/x-www-form-urlencoded
  Schema: {
    "$ref": "#/components/schemas/Body_delete_avatar_endpoint_api_v1_storage_delete_avatar_delete"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 12
Method: DELETE
Path: /api/v1/storage/delete/asset
Category/Tags: Storage
Summary: Delete Asset Endpoint
Description: Delete college asset from campusconnect-assets-private bucket
Request Body:
  MIME Type: application/x-www-form-urlencoded
  Schema: {
    "$ref": "#/components/schemas/Body_delete_asset_endpoint_api_v1_storage_delete_asset_delete"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 13
Method: POST
Path: /api/v1/auth/refresh-token
Category/Tags: api-v1, auth-api
Summary: Refresh Token Api
Description: API endpoint to refresh access token using refresh token
Request Body:
  MIME Type: application/json
  Schema: {
    "$ref": "#/components/schemas/RefreshTokenRequest"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 14
Method: POST
Path: /api/v1/auth/student/register
Category/Tags: api-v1, auth-api
Summary: Student Register Api
Description: API endpoint for student registration
Request Body:
  MIME Type: application/json
  Schema: {
    "$ref": "#/components/schemas/StudentRegisterRequest"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 15
Method: POST
Path: /api/v1/auth/faculty/register
Category/Tags: api-v1, auth-api
Summary: Faculty Register Api
Description: API endpoint for faculty registration
Request Body:
  MIME Type: application/json
  Schema: {
    "$ref": "#/components/schemas/FacultyRegisterRequest"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 16
Method: POST
Path: /api/v1/auth/validate-field
Category/Tags: api-v1, auth-api
Summary: Validate Field Api
Description: API endpoint to validate individual form fields (email, phone, enrollment_no, employee_id)
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 17
Method: POST
Path: /api/v1/auth/forgot-password/student
Category/Tags: api-v1, auth-api, Password Reset
Summary: Forgot Password Student
Description: Initiate password reset for student
Request Body:
  MIME Type: application/json
  Schema: {
    "$ref": "#/components/schemas/ForgotPasswordRequest"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/ForgotPasswordResponse"
}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 18
Method: POST
Path: /api/v1/auth/forgot-password/faculty
Category/Tags: api-v1, auth-api, Password Reset
Summary: Forgot Password Faculty
Description: Initiate password reset for faculty
Request Body:
  MIME Type: application/json
  Schema: {
    "$ref": "#/components/schemas/ForgotPasswordFacultyRequest"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/ForgotPasswordResponse"
}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 19
Method: GET
Path: /api/v1/auth/validate-reset-token/{token}
Category/Tags: api-v1, auth-api, Password Reset
Summary: Validate Reset Token
Description: Validate password reset token and return user info
Parameters:
  - Name: token
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/TokenValidationResponse"
}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 20
Method: POST
Path: /api/v1/auth/reset-password/{token}
Category/Tags: api-v1, auth-api, Password Reset
Summary: Reset Password
Description: Reset user password using valid token
Parameters:
  - Name: token
    In: path
    Required: True
    Type: string
    Description: No description
Request Body:
  MIME Type: application/json
  Schema: {
    "$ref": "#/components/schemas/ResetPasswordRequest"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/ResetPasswordResponse"
}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 21
Method: GET
Path: /api/v1/auth/status
Category/Tags: api-v1, auth-api
Summary: Get Unified Auth Status
Description: Unified authentication status endpoint
Returns authentication status for current user or specific user type

Query params:
- user_type: Optional filter for specific user type (admin/student/faculty)
Parameters:
  - Name: user_type
    In: query
    Required: False
    Type: None
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 22
Method: GET
Path: /api/v1/auth/redirect/login
Category/Tags: api-v1, auth-api, Auth Redirects
Summary: Unified Login Redirect
Description: UNIFIED login redirect endpoint

Handles all login redirects based on type and source:
- Admin logins: Redirect to frontend with admin tab
- Student/Faculty logins: Redirect to appropriate frontend pages
- Legacy requests: Redirect to proper API endpoints
Parameters:
  - Name: type
    In: query
    Required: False
    Type: string
    Description: Login type: admin, student, faculty, or general
  - Name: method
    In: query
    Required: False
    Type: string
    Description: Original HTTP method: GET or POST
  - Name: source
    In: query
    Required: False
    Type: string
    Description: Source: legacy, admin, or direct
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 23
Method: GET
Path: /api/v1/auth/redirect/logout
Category/Tags: api-v1, auth-api, Auth Redirects
Summary: Unified Logout Redirect
Description: UNIFIED logout redirect endpoint

Handles all logout redirects based on type:
- Admin logout: Redirect to admin logout API
- Student logout: Redirect to student logout API  
- Faculty logout: Redirect to faculty logout API
Parameters:
  - Name: type
    In: query
    Required: False
    Type: string
    Description: Logout type: admin, student, faculty
  - Name: return_to
    In: query
    Required: False
    Type: string
    Description: URL to redirect to after logout
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 24
Method: GET
Path: /api/v1/auth/redirect/info
Category/Tags: api-v1, auth-api, Auth Redirects
Summary: Redirect Info
Description: Information endpoint about available redirects
Useful for debugging and documentation
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 25
Method: POST
Path: /api/v1/auth/login
Category/Tags: api-v1, auth-api
Summary: Unified Login
Description: Unified login endpoint for all user types (admin, student, faculty)
Replaces 3 separate login endpoints with single endpoint + user_type parameter
Request Body:
  MIME Type: application/json
  Schema: {
    "$ref": "#/components/schemas/UnifiedLoginRequest"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 26
Method: POST
Path: /api/v1/auth/logout
Category/Tags: api-v1, auth-api
Summary: Unified Logout
Description: Unified logout endpoint for all user types
Auto-detects user type from session/token and performs appropriate logout
Replaces 3 separate logout endpoints with single smart endpoint
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 27
Method: GET
Path: /api/v1/auth/admin/profile
Category/Tags: api-v1, auth-api
Summary: Get Admin Profile Api
Description: API endpoint to get admin profile data
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 28
Method: PUT
Path: /api/v1/auth/admin/profile
Category/Tags: api-v1, auth-api
Summary: Update Admin Profile Api
Description: API endpoint to update admin profile
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 29
Method: PUT
Path: /api/v1/auth/admin/password
Category/Tags: api-v1, auth-api
Summary: Update Admin Password Api
Description: API endpoint to update admin password
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 30
Method: GET
Path: /api/v1/auth/info
Category/Tags: api-v1, auth-api
Summary: Unified Auth Info
Description: Information endpoint for unified authentication system
Shows consolidation details and usage instructions
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 31
Method: GET
Path: /api/v1/client/events/unified
Category/Tags: api-v1, client-api, client-events-api
Summary: Get Events Unified
Description: UNIFIED endpoint for all event operations: list, search, upcoming, categories
Parameters:
  - Name: mode
    In: query
    Required: False
    Type: string
    Description: Mode: list, search, upcoming, categories
  - Name: status
    In: query
    Required: False
    Type: string
    Description: Filter by event status: all, upcoming, ongoing, completed
  - Name: category
    In: query
    Required: False
    Type: string
    Description: Filter by event category
  - Name: q
    In: query
    Required: False
    Type: string
    Description: Search query (required for search mode)
  - Name: page
    In: query
    Required: False
    Type: integer
    Description: Page number for pagination
  - Name: limit
    In: query
    Required: False
    Type: integer
    Description: Number of events per page
  - Name: force_refresh
    In: query
    Required: False
    Type: boolean
    Description: Force refresh cache
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 32
Method: GET
Path: /api/v1/client/events/list
Category/Tags: api-v1, client-api, client-events-api
Summary: Get Events List
Description: LEGACY: Redirect to unified endpoint - Get paginated list of events
Parameters:
  - Name: status
    In: query
    Required: False
    Type: string
    Description: Filter by event status: all, upcoming, ongoing, completed
  - Name: category
    In: query
    Required: False
    Type: string
    Description: Filter by event category
  - Name: page
    In: query
    Required: False
    Type: integer
    Description: Page number for pagination
  - Name: limit
    In: query
    Required: False
    Type: integer
    Description: Number of events per page
  - Name: force_refresh
    In: query
    Required: False
    Type: boolean
    Description: Force refresh cache
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 33
Method: GET
Path: /api/v1/client/events/details/{event_id}
Category/Tags: api-v1, client-api, client-events-api
Summary: Get Event Details
Description: Get detailed information about a specific event
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 34
Method: GET
Path: /api/v1/client/events/timeline/{event_id}
Category/Tags: api-v1, client-api, client-events-api
Summary: Get Event Timeline
Description: Get comprehensive timeline information for an event
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 35
Method: GET
Path: /api/v1/client/events/categories
Category/Tags: api-v1, client-api, client-events-api
Summary: Get Event Categories
Description: LEGACY: Redirect to unified endpoint - Get list of all event categories
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 36
Method: GET
Path: /api/v1/client/events/search
Category/Tags: api-v1, client-api, client-events-api
Summary: Search Events
Description: LEGACY: Redirect to unified endpoint - Search events by name, description, or category
Parameters:
  - Name: q
    In: query
    Required: True
    Type: string
    Description: Search query
  - Name: status
    In: query
    Required: False
    Type: string
    Description: Filter by event status
  - Name: category
    In: query
    Required: False
    Type: string
    Description: Filter by event category
  - Name: page
    In: query
    Required: False
    Type: integer
    Description: Page number for pagination
  - Name: limit
    In: query
    Required: False
    Type: integer
    Description: Number of events per page
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 37
Method: GET
Path: /api/v1/client/events/upcoming
Category/Tags: api-v1, client-api, client-events-api
Summary: Get Upcoming Events
Description: LEGACY: Redirect to unified endpoint - Get upcoming events (quick access endpoint)
Parameters:
  - Name: limit
    In: query
    Required: False
    Type: integer
    Description: Number of upcoming events to retrieve
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 38
Method: GET
Path: /api/v1/client/profile/complete-profile
Category/Tags: api-v1, client-api, client-profile-api
Summary: Get Complete Profile
Description: Get complete profile information including stats and event history in one call - OPTIMIZED
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 39
Method: GET
Path: /api/v1/client/profile/faculty/complete-profile
Category/Tags: api-v1, client-api, client-profile-api
Summary: Get Faculty Complete Profile
Description: Get complete faculty profile information including stats and event history in one call - OPTIMIZED
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 40
Method: PUT
Path: /api/v1/client/profile/update
Category/Tags: api-v1, client-api, client-profile-api
Summary: Update Profile
Description: Update student profile information
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 41
Method: PUT
Path: /api/v1/client/profile/faculty/update
Category/Tags: api-v1, client-api, client-profile-api
Summary: Update Faculty Profile
Description: Update faculty profile information
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 42
Method: POST
Path: /api/v1/client/profile/change-password
Category/Tags: api-v1, client-api, client-profile-api
Summary: Change Password
Description: Change student password
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 43
Method: GET
Path: /api/v1/client/profile/team-details/{event_id}/{team_id}
Category/Tags: api-v1, client-api, client-profile-api
Summary: Get Team Details
Description: LEGACY: Redirect to unified team endpoint - Get detailed team member information
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
  - Name: team_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 44
Method: GET
Path: /api/v1/client/profile/test-auth
Category/Tags: api-v1, client-api, client-profile-api
Summary: Test Auth
Description: PHASE 4A: REMOVED IN PRODUCTION - Test endpoint for authentication verification
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 45
Method: GET
Path: /api/v1/client/profile/team-info/{event_id}/{team_id}
Category/Tags: api-v1, client-api, client-profile-api
Summary: Get Team Info
Description: LEGACY: Redirect to unified team endpoint - Get detailed team member information
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
  - Name: team_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 46
Method: GET
Path: /api/v1/client/profile/team-registration-details/{event_id}
Category/Tags: api-v1, client-api, client-profile-api
Summary: Get Team Registration Details
Description: LEGACY: Redirect to unified team endpoint - Get complete team registration details
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 47
Method: GET
Path: /api/v1/client/profile/team/{event_id}/unified
Category/Tags: api-v1, client-api, client-profile-api, Team Management
Summary: Get Unified Team Data
Description: Unified endpoint for all team data retrieval operations
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
  - Name: mode
    In: query
    Required: False
    Type: string
    Description: Data mode: 'full' (all data), 'info' (basic team info), 'tasks' (task details), 'messages' (message history), 'roles' (role assignments)
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/UnifiedTeamDataResponse"
}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 48
Method: POST
Path: /api/v1/client/profile/team/{event_id}/actions
Category/Tags: api-v1, client-api, client-profile-api, Team Management
Summary: Unified Team Actions
Description: UNIFIED endpoint for all team actions
Replaces: create-task, assign-role, post-message, submit-task, review-task, complete-task, generate-report
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Request Body:
  MIME Type: application/json
  Schema: {
    "$ref": "#/components/schemas/UnifiedTeamActionData"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/UnifiedTeamActionResponse"
}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 49
Method: POST
Path: /api/v1/client/registration/register
Category/Tags: api-v1, client-api, client-registration-api
Summary: Register For Event
Description: Universal registration endpoint for events
Handles individual registration and team registration for both students and faculty
Request Body:
  MIME Type: application/json
  Schema: {
    "$ref": "#/components/schemas/RegistrationRequest"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 50
Method: GET
Path: /api/v1/client/registration/status/{event_id}
Category/Tags: api-v1, client-api, client-registration-api
Summary: Get Registration Status
Description: Get registration status for current user (student or faculty)
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 51
Method: GET
Path: /api/v1/client/registration/event/{event_id}/status
Category/Tags: api-v1, client-api, client-registration-api
Summary: Get Registration Status Alt
Description: LEGACY: Redirect to main status endpoint - Get registration status (alternative URL pattern)
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 52
Method: DELETE
Path: /api/v1/client/registration/cancel/{event_id}
Category/Tags: api-v1, client-api, client-registration-api
Summary: Cancel Registration
Description: Cancel registration for an event (student or faculty)
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 53
Method: GET
Path: /api/v1/client/registration/my-registrations
Category/Tags: api-v1, client-api, client-registration-api
Summary: Get My Registrations
Description: Get all registrations for current user (student or faculty)
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 54
Method: GET
Path: /api/v1/client/registration/lookup/faculty/{employee_id}
Category/Tags: api-v1, client-api, client-registration-api
Summary: Lookup Faculty
Description: Lookup faculty by employee ID for registration purposes
Parameters:
  - Name: employee_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 55
Method: GET
Path: /api/v1/client/registration/lookup/student/{enrollment_no}
Category/Tags: api-v1, client-api, client-registration-api
Summary: Lookup Student
Description: Lookup student by enrollment number for registration purposes
Parameters:
  - Name: enrollment_no
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 56
Method: GET
Path: /api/v1/client/registration/lookup/student/{enrollment_no}/eligibility/{event_id}
Category/Tags: api-v1, client-api, client-registration-api
Summary: Check Student Eligibility
Description: Check if student is eligible for specific event based on event criteria
Parameters:
  - Name: enrollment_no
    In: path
    Required: True
    Type: string
    Description: No description
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 57
Method: GET
Path: /api/v1/client/registration/invitations
Category/Tags: api-v1, client-api, client-registration-api
Summary: Get My Invitations
Description: Get team invitations for current student
Parameters:
  - Name: status
    In: query
    Required: False
    Type: string
    Description: Filter by invitation status
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 58
Method: POST
Path: /api/v1/client/registration/invitations/{invitation_id}/respond
Category/Tags: api-v1, client-api, client-registration-api
Summary: Respond To Invitation
Description: Respond to a team invitation (accept or decline)
Parameters:
  - Name: invitation_id
    In: path
    Required: True
    Type: string
    Description: No description
Request Body:
  MIME Type: application/json
  Schema: {
    "type": "object",
    "additionalProperties": true,
    "title": "Response Data"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 59
Method: GET
Path: /api/v1/client/registration/team/{team_registration_id}/details
Category/Tags: api-v1, client-api, client-registration-api
Summary: Get Team Details
Description: Get team details by team registration ID
Parameters:
  - Name: team_registration_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 60
Method: GET
Path: /api/v1/client/feedback/form/{event_id}
Category/Tags: api-v1, client-api, client-feedback-api
Summary: Get Feedback Form
Description: Get feedback form for an event
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 61
Method: POST
Path: /api/v1/client/feedback/submit
Category/Tags: api-v1, client-api, client-feedback-api
Summary: Submit Feedback
Description: Submit feedback for an event
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 62
Method: GET
Path: /api/v1/client/feedback/eligibility/{event_id}
Category/Tags: api-v1, client-api, client-feedback-api
Summary: Check Feedback Eligibility
Description: Check if student is eligible to submit feedback
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 63
Method: GET
Path: /api/v1/client/feedback/test-health
Category/Tags: api-v1, client-api, client-feedback-api
Summary: Test Health
Description: PHASE 4A: REMOVE IN PRODUCTION - Simple health check for test endpoints
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 64
Method: GET
Path: /api/v1/client/feedback/test-form/{event_id}
Category/Tags: api-v1, client-api, client-feedback-api
Summary: Get Test Feedback Form
Description: PHASE 4A: REMOVE IN PRODUCTION - Get feedback form for testing purposes (no authentication required)
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 65
Method: POST
Path: /api/v1/client/feedback/test-submit
Category/Tags: api-v1, client-api, client-feedback-api
Summary: Submit Test Feedback
Description: PHASE 4A: REMOVE IN PRODUCTION - Submit test feedback for an event (test mode only - no authentication required)
Request Body:
  MIME Type: application/x-www-form-urlencoded
  Schema: {
    "$ref": "#/components/schemas/Body_submit_test_feedback_api_v1_client_feedback_test_submit_post"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 66
Method: GET
Path: /api/v1/admin/events/faculty-organizers
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Get Faculty Organizers
Description: Get faculty members who can be event organizers

Returns:
    List of faculty organizers with their basic information
Parameters:
  - Name: search
    In: query
    Required: False
    Type: None
    Description: Search query for faculty name, email, or employee ID
  - Name: department
    In: query
    Required: False
    Type: None
    Description: Filter by department
  - Name: designation
    In: query
    Required: False
    Type: None
    Description: Filter by designation
  - Name: limit
    In: query
    Required: False
    Type: integer
    Description: Maximum number of results
  - Name: skip
    In: query
    Required: False
    Type: integer
    Description: Number of results to skip for pagination
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 67
Method: GET
Path: /api/v1/admin/events/faculty-organizers/{employee_id}/assigned-events
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Get Faculty Assigned Events
Description: Get events assigned to a specific faculty organizer

Args:
    employee_id: Faculty employee ID
    
Returns:
    List of event IDs assigned to the faculty member
Parameters:
  - Name: employee_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 68
Method: POST
Path: /api/v1/admin/events/create
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Create Event
Description: Create a new event
Request Body:
  MIME Type: application/json
  Schema: {
    "$ref": "#/components/schemas/CreateEvent"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 69
Method: PUT
Path: /api/v1/admin/events/update/{event_id}
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Update Event
Description: Update an existing event - handles both frontend datetime format and Pydantic model format
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 70
Method: GET
Path: /api/v1/admin/events/list
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Get Events List
Description: Get paginated list of events for admin management with Redis caching
Parameters:
  - Name: status
    In: query
    Required: False
    Type: string
    Description: Filter by event status
  - Name: target_audience
    In: query
    Required: False
    Type: string
    Description: Filter by target audience
  - Name: page
    In: query
    Required: False
    Type: integer
    Description: Page number
  - Name: limit
    In: query
    Required: False
    Type: integer
    Description: Events per page (max 1000)
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 71
Method: GET
Path: /api/v1/admin/events/pending-approval
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Get Pending Approval Events
Description: Get events pending Super Admin approval (Super Admin only)
Parameters:
  - Name: page
    In: query
    Required: False
    Type: integer
    Description: Page number
  - Name: limit
    In: query
    Required: False
    Type: integer
    Description: Events per page (max 1000)
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 72
Method: GET
Path: /api/v1/admin/events/details/{event_id}
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Get Event Details
Description: Get detailed event information for admin management
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 73
Method: GET
Path: /api/v1/admin/events/stats
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Get Event Stats
Description: Get comprehensive event statistics for admin dashboard
Parameters:
  - Name: event_id
    In: query
    Required: True
    Type: string
    Description: Event ID to get statistics for
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 74
Method: GET
Path: /api/v1/admin/events/registrations/{event_id}
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Get Event Registrations
Description: Get detailed registration data for an event using existing registration service
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
  - Name: page
    In: query
    Required: False
    Type: integer
    Description: Page number
  - Name: limit
    In: query
    Required: False
    Type: integer
    Description: Registrations per page
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 75
Method: POST
Path: /api/v1/admin/events/bulk-update-status
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Bulk Update Event Status
Description: Bulk update status for multiple events
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 76
Method: GET
Path: /api/v1/admin/events/attendance/{event_id}
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Get Event Attendance
Description: Get detailed attendance data for an event
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
  - Name: page
    In: query
    Required: False
    Type: integer
    Description: Page number
  - Name: limit
    In: query
    Required: False
    Type: integer
    Description: Attendees per page
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 77
Method: POST
Path: /api/v1/admin/events/export/{event_id}
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Export Event Data
Description: Export event registration data in various formats
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 78
Method: DELETE
Path: /api/v1/admin/events/delete/{event_id}
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Delete Event
Description: Step-by-step event deletion:
1. Delete event files from Supabase storage
2. Remove event ID from faculty assigned_events
3. Delete event data from events collection
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 79
Method: POST
Path: /api/v1/admin/events/approve/{event_id}
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Approve Event
Description: Approve a pending event - accessible by Super Admin and assigned faculty organizers
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 80
Method: POST
Path: /api/v1/admin/events/decline/{event_id}
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Decline Event
Description: Decline a pending event - accessible by Super Admin and assigned faculty organizers
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 81
Method: POST
Path: /api/v1/admin/events/trigger-pending-notifications
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Trigger Pending Notifications
Description: Trigger notifications for all pending approval events
This endpoint finds all events with status 'pending_approval' and sends
notification requests to Super Admins for approval.

Only Super Admins can trigger this endpoint.
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 82
Method: POST
Path: /api/v1/admin/events/feedback/create/{event_id}
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Create Feedback Form
Description: Create or update feedback form for an event
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 83
Method: GET
Path: /api/v1/admin/events/feedback/form/{event_id}
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Get Feedback Form
Description: Get feedback form for an event
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 84
Method: GET
Path: /api/v1/admin/events/feedback/responses/{event_id}
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Get Feedback Responses
Description: Get all feedback responses for an event
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
  - Name: page
    In: query
    Required: False
    Type: integer
    Description: Page number
  - Name: limit
    In: query
    Required: False
    Type: integer
    Description: Responses per page
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 85
Method: GET
Path: /api/v1/admin/events/feedback/analytics/{event_id}
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Get Feedback Analytics
Description: Get feedback analytics and summary for an event
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 86
Method: DELETE
Path: /api/v1/admin/events/feedback/delete/{event_id}
Category/Tags: api-v1, admin-api, admin-events-api
Summary: Delete Feedback Form
Description: Delete feedback form for an event
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 87
Method: GET
Path: /api/v1/admin/assets/list
Category/Tags: api-v1, admin-api, admin-assets-api
Summary: List Assets
Description: List all assets from database with optional filtering
Parameters:
  - Name: asset_type
    In: query
    Required: False
    Type: None
    Description: No description
  - Name: limit
    In: query
    Required: False
    Type: integer
    Description: No description
  - Name: skip
    In: query
    Required: False
    Type: integer
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 88
Method: GET
Path: /api/v1/admin/assets/statistics
Category/Tags: api-v1, admin-api, admin-assets-api
Summary: Get Asset Statistics
Description: Get comprehensive asset statistics
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 89
Method: POST
Path: /api/v1/admin/assets/upload
Category/Tags: api-v1, admin-api, admin-assets-api
Summary: Upload Asset
Description: Upload new asset with comprehensive processing
Request Body:
  MIME Type: multipart/form-data
  Schema: {
    "$ref": "#/components/schemas/Body_upload_asset_api_v1_admin_assets_upload_post"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 90
Method: GET
Path: /api/v1/admin/assets/short-url/{asset_id}
Category/Tags: api-v1, admin-api, admin-assets-api
Summary: Get Asset Short Url
Description: Get or generate short URL for asset
Parameters:
  - Name: asset_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 91
Method: GET
Path: /api/v1/admin/assets/image-tag/{asset_id}
Category/Tags: api-v1, admin-api, admin-assets-api
Summary: Get Asset Image Tag
Description: Get HTML image tag for asset
Parameters:
  - Name: asset_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 92
Method: DELETE
Path: /api/v1/admin/assets/delete/{asset_id}
Category/Tags: api-v1, admin-api, admin-assets-api
Summary: Delete Asset
Description: Delete asset completely
Parameters:
  - Name: asset_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 93
Method: GET
Path: /api/v1/admin/certificate-templates/
Category/Tags: api-v1, admin-api, admin-certificate-templates-api
Summary: List Certificate Templates Root
Description: List certificate templates from database (root endpoint for frontend compatibility)
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 94
Method: GET
Path: /api/v1/admin/certificate-templates/dashboard
Category/Tags: api-v1, admin-api, admin-certificate-templates-api
Summary: List Certificate Templates
Description: List certificate templates from database
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 95
Method: GET
Path: /api/v1/admin/certificate-templates/statistics
Category/Tags: api-v1, admin-api, admin-certificate-templates-api
Summary: Get Certificate Template Statistics
Description: Get certificate template statistics from database
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 96
Method: POST
Path: /api/v1/admin/certificate-templates/upload
Category/Tags: api-v1, admin-api, admin-certificate-templates-api
Summary: Upload Certificate Template
Description: Upload a new certificate HTML template to database and storage
Request Body:
  MIME Type: multipart/form-data
  Schema: {
    "$ref": "#/components/schemas/Body_upload_certificate_template_api_v1_admin_certificate_templates_upload_post"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 97
Method: DELETE
Path: /api/v1/admin/certificate-templates/{template_id}
Category/Tags: api-v1, admin-api, admin-certificate-templates-api
Summary: Delete Certificate Template
Description: Delete a certificate template from database
Parameters:
  - Name: template_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 98
Method: GET
Path: /api/v1/admin/certificate-templates/{template_id}/preview
Category/Tags: api-v1, admin-api, admin-certificate-templates-api
Summary: Preview Certificate Template
Description: Get certificate template content for preview
Parameters:
  - Name: template_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 99
Method: POST
Path: /api/v1/admin/certificate-templates/migrate
Category/Tags: api-v1, admin-api, admin-certificate-templates-api
Summary: Migrate Existing Templates
Description: Migrate existing template files to database
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 100
Method: GET
Path: /api/v1/admin/venues/
Category/Tags: api-v1, admin-api, admin-venues-api
Summary: Get Venues
Description: Get venues with optional inactive inclusion

- By default returns only active venues
- Set include_inactive=true to get all venues (active + inactive)
- Results are sorted by name for consistency
Parameters:
  - Name: include_inactive
    In: query
    Required: False
    Type: boolean
    Description: Include inactive venues in results
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {
    "type": "array",
    "items": {
        "$ref": "#/components/schemas/Venue"
    },
    "title": "Response Get Venues Api V1 Admin Venues  Get"
}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 101
Method: POST
Path: /api/v1/admin/venues/
Category/Tags: api-v1, admin-api, admin-venues-api
Summary: Create Venue
Description: Create a new venue (admin only)
Request Body:
  MIME Type: application/json
  Schema: {
    "$ref": "#/components/schemas/VenueCreate"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {
    "type": "object",
    "additionalProperties": true,
    "title": "Response Create Venue Api V1 Admin Venues  Post"
}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 102
Method: GET
Path: /api/v1/admin/venues/all
Category/Tags: api-v1, admin-api, admin-venues-api
Summary: Get All Venues
Description: Get all venues including inactive ones (frontend compatibility)
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {
    "items": {
        "$ref": "#/components/schemas/Venue"
    },
    "type": "array",
    "title": "Response Get All Venues Api V1 Admin Venues All Get"
}

============================================================
ENDPOINT 103
Method: GET
Path: /api/v1/admin/venues/{venue_id}
Category/Tags: api-v1, admin-api, admin-venues-api
Summary: Get Venue
Description: Get a specific venue by ID
Parameters:
  - Name: venue_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/Venue"
}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 104
Method: PUT
Path: /api/v1/admin/venues/{venue_id}
Category/Tags: api-v1, admin-api, admin-venues-api
Summary: Update Venue
Description: Update a venue (admin only)
Parameters:
  - Name: venue_id
    In: path
    Required: True
    Type: string
    Description: No description
Request Body:
  MIME Type: application/json
  Schema: {
    "$ref": "#/components/schemas/VenueUpdate"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {
    "type": "object",
    "additionalProperties": true,
    "title": "Response Update Venue Api V1 Admin Venues  Venue Id  Put"
}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 105
Method: DELETE
Path: /api/v1/admin/venues/{venue_id}
Category/Tags: api-v1, admin-api, admin-venues-api
Summary: Delete Venue Compatibility
Description: [COMPATIBILITY] Redirect to consolidated status endpoint
Parameters:
  - Name: venue_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {
    "type": "object",
    "additionalProperties": true,
    "title": "Response Delete Venue Compatibility Api V1 Admin Venues  Venue Id  Delete"
}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 106
Method: PATCH
Path: /api/v1/admin/venues/{venue_id}/status
Category/Tags: api-v1, admin-api, admin-venues-api
Summary: Manage Venue Status
Description: CONSOLIDATED: Manage venue status - delete, restore, or permanently delete

Actions:
- delete: Soft delete (set is_active=false)
- restore: Restore soft-deleted venue (set is_active=true)  
- permanent_delete: Permanently remove from database (IRREVERSIBLE)
Parameters:
  - Name: venue_id
    In: path
    Required: True
    Type: string
    Description: No description
  - Name: action
    In: query
    Required: True
    Type: string
    Description: Action: delete, restore, or permanent_delete
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {
    "type": "object",
    "additionalProperties": true,
    "title": "Response Manage Venue Status Api V1 Admin Venues  Venue Id  Status Patch"
}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 107
Method: POST
Path: /api/v1/admin/venues/{venue_id}/restore
Category/Tags: api-v1, admin-api, admin-venues-api
Summary: Restore Venue Compatibility
Description: [COMPATIBILITY] Redirect to consolidated status endpoint
Parameters:
  - Name: venue_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {
    "type": "object",
    "additionalProperties": true,
    "title": "Response Restore Venue Compatibility Api V1 Admin Venues  Venue Id  Restore Post"
}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 108
Method: DELETE
Path: /api/v1/admin/venues/{venue_id}/permanent
Category/Tags: api-v1, admin-api, admin-venues-api
Summary: Permanent Delete Venue Compatibility
Description: [COMPATIBILITY] Redirect to consolidated status endpoint
Parameters:
  - Name: venue_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {
    "type": "object",
    "additionalProperties": true,
    "title": "Response Permanent Delete Venue Compatibility Api V1 Admin Venues  Venue Id  Permanent Delete"
}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 109
Method: GET
Path: /api/v1/admin/users/
Category/Tags: api-v1, admin-api, admin-users-api
Summary: Get Users
Description: CONSOLIDATED: Get users with comprehensive filtering and search options.

This is now the ONLY user listing endpoint. All other listing endpoints redirect here.
Parameters:
  - Name: user_type
    In: query
    Required: True
    Type: string
    Description: Filter by user type - REQUIRED
  - Name: page
    In: query
    Required: False
    Type: integer
    Description: Page number for pagination
  - Name: limit
    In: query
    Required: False
    Type: integer
    Description: Items per page
  - Name: include_inactive
    In: query
    Required: False
    Type: boolean
    Description: Include soft-deleted users
  - Name: user_id
    In: query
    Required: False
    Type: None
    Description: Specific user ID to fetch
  - Name: search
    In: query
    Required: False
    Type: None
    Description: Search users by name or ID
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 110
Method: POST
Path: /api/v1/admin/users/
Category/Tags: api-v1, admin-api, admin-users-api
Summary: Create User
Description: CONSOLIDATED: Create users - supports both single and bulk creation

This is now the ONLY user creation endpoint. All other creation endpoints redirect here.
Request Body:
  MIME Type: application/json
  Schema: {
    "anyOf": [
        {
            "type": "object",
            "additionalProperties": true
        },
        {
            "type": "array",
            "items": {
                "type": "object",
                "additionalProperties": true
            }
        }
    ],
    "title": "User Data"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 111
Method: PUT
Path: /api/v1/admin/users/
Category/Tags: api-v1, admin-api, admin-users-api
Summary: Update User
Description: CONSOLIDATED: Update users - single endpoint for all user updates

This is now the ONLY user update endpoint. All other update endpoints redirect here.
Request Body:
  MIME Type: application/json
  Schema: {
    "type": "object",
    "additionalProperties": true,
    "title": "User Data"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 112
Method: PATCH
Path: /api/v1/admin/users/{user_id}/status
Category/Tags: api-v1, admin-api, admin-users-api
Summary: Manage User Status
Description: CONSOLIDATED: Manage user status - delete, restore, or permanently delete

Actions:
- delete: Soft delete (set is_active=false)
- restore: Restore soft-deleted user (set is_active=true)
- permanent_delete: Permanently remove from database (IRREVERSIBLE)
Parameters:
  - Name: user_id
    In: path
    Required: True
    Type: string
    Description: No description
  - Name: user_type
    In: query
    Required: True
    Type: string
    Description: No description
  - Name: action
    In: query
    Required: True
    Type: string
    Description: Action: delete, restore, or permanent_delete
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 113
Method: POST
Path: /api/v1/admin/attendance-preview/preview-strategy
Category/Tags: api-v1, admin-api, admin-attendance-preview-api
Summary: Preview Attendance Strategy
Description: Preview attendance strategy for event data
Returns the detected strategy, sessions, and configuration details
Request Body:
  MIME Type: application/json
  Schema: {
    "$ref": "#/components/schemas/EventPreviewRequest"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 114
Method: POST
Path: /api/v1/admin/attendance-preview/validate-custom-strategy
Category/Tags: api-v1, admin-api, admin-attendance-preview-api
Summary: Validate Custom Strategy
Description: Validate a custom attendance strategy configuration
Allows users to override the detected strategy
Request Body:
  MIME Type: application/json
  Schema: {
    "$ref": "#/components/schemas/CustomStrategyRequest"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 115
Method: GET
Path: /api/v1/admin/participation/event/{event_id}/participants
Category/Tags: api-v1, admin-api, admin-participation-management-api
Summary: Get Event Participants
Description: Get all participants for an event with admin-specific formatting (Admin only)
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
  - Name: page
    In: query
    Required: False
    Type: integer
    Description: No description
  - Name: limit
    In: query
    Required: False
    Type: integer
    Description: No description
  - Name: registration_type
    In: query
    Required: False
    Type: None
    Description: No description
  - Name: search
    In: query
    Required: False
    Type: None
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 116
Method: POST
Path: /api/v1/admin/participation/attendance/mark
Category/Tags: api-v1, admin-api, admin-participation-management-api
Summary: Mark Student Attendance
Description: Mark attendance for a student (Admin only)
Request Body:
  MIME Type: application/json
  Schema: {
    "additionalProperties": true,
    "type": "object",
    "title": "Attendance Data"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 117
Method: POST
Path: /api/v1/admin/participation/attendance/bulk-mark
Category/Tags: api-v1, admin-api, admin-participation-management-api
Summary: Bulk Mark Attendance
Description: Mark attendance for multiple students (Admin only)
Request Body:
  MIME Type: application/json
  Schema: {
    "additionalProperties": true,
    "type": "object",
    "title": "Bulk Data"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 118
Method: POST
Path: /api/v1/admin/participation/certificate/issue
Category/Tags: api-v1, admin-api, admin-participation-management-api
Summary: Issue Student Certificate
Description: Issue certificate for a student (Admin only)
Request Body:
  MIME Type: application/json
  Schema: {
    "additionalProperties": true,
    "type": "object",
    "title": "Certificate Data"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 119
Method: GET
Path: /api/v1/admin/participation/student/{enrollment_no}/participations
Category/Tags: api-v1, admin-api, admin-participation-management-api
Summary: Get Student Participation History
Description: Get participation history for a student (Admin only)
Parameters:
  - Name: enrollment_no
    In: path
    Required: True
    Type: string
    Description: No description
  - Name: include_details
    In: query
    Required: False
    Type: boolean
    Description: Include event details
  - Name: page
    In: query
    Required: False
    Type: integer
    Description: No description
  - Name: limit
    In: query
    Required: False
    Type: integer
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 120
Method: GET
Path: /api/v1/admin/participation/statistics/event/{event_id}
Category/Tags: api-v1, admin-api, admin-participation-management-api
Summary: Get Event Participation Statistics
Description: Get comprehensive participation statistics for an event (Admin only)
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 121
Method: GET
Path: /api/v1/admin/event-registration/event/{event_id}
Category/Tags: api-v1, admin-api, admin-event-registration-api, admin-event-registration
Summary: Get Event Registrations
Description: Get event registrations with pagination (Admin only)
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
  - Name: page
    In: query
    Required: False
    Type: integer
    Description: No description
  - Name: limit
    In: query
    Required: False
    Type: integer
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 122
Method: GET
Path: /api/v1/admin/event-registration/attendance/stats/{event_id}
Category/Tags: api-v1, admin-api, admin-event-registration-api, admin-event-registration
Summary: Get Attendance Statistics
Description: Get attendance statistics for an event (Admin only)
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 123
Method: GET
Path: /api/v1/admin/dashboard/complete
Category/Tags: api-v1, admin-api
Summary: Get Complete Dashboard
Description: Get complete admin dashboard data in a single request.

This unified endpoint combines:
- Recent activity logs with dynamic messaging
- Activity summary statistics  
- Analytics overview with real-time scheduler data

Reduces API calls from 3 to 1 for better performance and user experience.
Parameters:
  - Name: period
    In: query
    Required: False
    Type: string
    Description: Analytics period
  - Name: activity_limit
    In: query
    Required: False
    Type: integer
    Description: Recent activity limit
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 124
Method: GET
Path: /api/v1/email/health
Category/Tags: api-v1, email-api, email-api
Summary: Email Service Health
Description: Get email service health status and statistics
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 125
Method: GET
Path: /api/v1/email/stats
Category/Tags: api-v1, email-api, email-api
Summary: Email Service Statistics
Description: Get comprehensive email service statistics
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 126
Method: POST
Path: /api/v1/email/circuit-breaker/reset
Category/Tags: api-v1, email-api, email-api
Summary: Reset Circuit Breaker
Description: Reset the email service circuit breaker
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 127
Method: GET
Path: /api/v1/attendance/config/{event_id}
Category/Tags: api-v1, attendance-api, attendance
Summary: Get Attendance Config
Description: Get attendance configuration for an event (Admin only)
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 128
Method: GET
Path: /api/v1/attendance/sessions/{event_id}/active
Category/Tags: api-v1, attendance-api, attendance
Summary: Get Active Attendance Sessions
Description: Get active attendance sessions for an event (Admin only)
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 129
Method: GET
Path: /api/v1/attendance/analytics/{event_id}
Category/Tags: api-v1, attendance-api, attendance
Summary: Get Attendance Analytics
Description: Get attendance analytics for an event (Admin only)
Parameters:
  - Name: event_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 130
Method: GET
Path: /api/v1/organizer
Category/Tags: api-v1, organizer-access-api, organizer-access
Summary: Organizer Root No Slash
Description: Redirect root organizer path to React frontend
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 131
Method: GET
Path: /api/v1/organizer/
Category/Tags: api-v1, organizer-access-api, organizer-access
Summary: Organizer Root With Slash
Description: Redirect root organizer path to React frontend
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 132
Method: GET
Path: /api/v1/organizer/dashboard
Category/Tags: api-v1, organizer-access-api, organizer-access
Summary: Organizer Dashboard
Description: Redirect to organizer dashboard
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 133
Method: GET
Path: /api/v1/organizer/events
Category/Tags: api-v1, organizer-access-api, organizer-access
Summary: Organizer Events
Description: Redirect to organizer events page
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 134
Method: POST
Path: /api/v1/organizer/request-access
Category/Tags: api-v1, organizer-access-api, organizer-access
Summary: Request Organizer Access
Description: Faculty member requests organizer access
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 135
Method: GET
Path: /api/v1/organizer/access-status
Category/Tags: api-v1, organizer-access-api, organizer-access
Summary: Get Organizer Access Status
Description: Get current organizer access status for faculty
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 136
Method: POST
Path: /api/v1/organizer/access-portal
Category/Tags: api-v1, organizer-access-api, organizer-access
Summary: Access Organizer Portal
Description: Faculty member accesses organizer portal (creates admin session)
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 137
Method: POST
Path: /api/v1/organizer/admin/grant-access/{faculty_employee_id}
Category/Tags: api-v1, organizer-access-api, organizer-access
Summary: Grant Organizer Access
Description: Admin endpoint to grant organizer access to faculty
Parameters:
  - Name: faculty_employee_id
    In: path
    Required: True
    Type: string
    Description: No description
Request Body:
  MIME Type: application/json
  Schema: {
    "anyOf": [
        {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        {
            "type": "null"
        }
    ],
    "title": "Assigned Events"
}
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 138
Method: POST
Path: /api/v1/organizer/admin/revoke-access/{faculty_employee_id}
Category/Tags: api-v1, organizer-access-api, organizer-access
Summary: Revoke Organizer Access
Description: Admin endpoint to revoke organizer access from faculty
Parameters:
  - Name: faculty_employee_id
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 139
Method: GET
Path: /api/v1/organizer/admin/requests
Category/Tags: api-v1, organizer-access-api, organizer-access
Summary: Get Organizer Requests
Description: Get all pending organizer access requests (Super Admin only)
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 140
Method: GET
Path: /api/v1/organizer/dashboard-stats
Category/Tags: api-v1, organizer-access-api, organizer-access
Summary: Get Organizer Dashboard Stats
Description: Get dashboard statistics for organizer portal
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 141
Method: GET
Path: /api/health
Category/Tags: No category
Summary: Health Check
Description: Simple health check endpoint to test API connectivity
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 142
Method: GET
Path: /
Category/Tags: No category
Summary: Read Root
Description: Redirect root to React frontend
Responses:
  HTTP 200: Successful Response
    MIME Type: text/html
    Schema: {
    "type": "string"
}

============================================================
ENDPOINT 143
Method: GET
Path: /favicon.ico
Category/Tags: No category
Summary: Favicon
Description: Serve the favicon
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 144
Method: GET
Path: /event-categories
Category/Tags: No category
Summary: Event Categories
Description: Redirect event categories to React frontend
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 145
Method: GET
Path: /health/scheduler
Category/Tags: No category
Summary: Scheduler Health
Description: Check the health of the dynamic event scheduler
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}

============================================================
ENDPOINT 146
Method: GET
Path: /logo/{filename}
Category/Tags: No category
Summary: Serve Logo
Description: Serve logo files from the uploads/assets/logo directory
Parameters:
  - Name: filename
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}

============================================================
ENDPOINT 147
Method: GET
Path: /signature/{path}
Category/Tags: No category
Summary: Serve Signature
Description: Serve signature files from the uploads/assets/signature directory
Parameters:
  - Name: path
    In: path
    Required: True
    Type: string
    Description: No description
Responses:
  HTTP 200: Successful Response
    MIME Type: application/json
    Schema: {}
  HTTP 422: Validation Error
    MIME Type: application/json
    Schema: {
    "$ref": "#/components/schemas/HTTPValidationError"
}
