# CampusConnect Frontend Environment Configuration - HYBRID SUPABASE ARCHITECTURE
# Copy this file to .env and update the values as needed

# Supabase Configuration (Frontend - Client Side Storage)
# Used for: Profile pictures, assets (logos, signatures)
VITE_SUPABASE_URL=https://your-project.supabase.co
VITE_SUPABASE_ANON_KEY=your-supabase-anon-key

# Appwrite Configuration (Optional - if still using)
VITE_APPWRITE_PROJECT_ID=your-appwrite-project-id
VITE_APPWRITE_ENDPOINT=https://fra.cloud.appwrite.io/v1

# API Configuration - Backend Communication
# Used for: Certificate templates (secure admin operations)
API_URL=http://localhost:8000

# Development Configuration
VITE_FRONTEND_URL=http://localhost:3000

# HYBRID ARCHITECTURE NOTES:
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# Frontend Supabase (supabase.js):
#   ✅ Profile pictures/avatars → students/{enrollment_no}/ & faculties/{employee_id}/
#   ✅ Assets (logos, signatures) → assets/logos/ & assets/signatures/
#   ✅ Direct client-to-storage uploads for better UX
#
# Backend API (certificateTemplates.js):
#   ✅ Certificate templates → /api/v1/admin/certificate-templates/*
#   ✅ Server-side validation and security
#   ✅ Admin-only operations with proper authentication
#
# This separation provides:
#   🚀 Better UX for user uploads (immediate feedback)
#   🛡️ Enhanced security for admin operations  
#   ⚡ Reduced server load for routine uploads
#   🎯 Centralized control for sensitive templates
